;; Analyzed by ClojureScript 0.0-3297
{:use-macros nil, :excludes #{}, :name cljsketch.mouse-tools, :imports nil, :requires {u cljsketch.util, cljsketch.util cljsketch.util, v cljsketch.vector, cljsketch.vector cljsketch.vector}, :uses nil, :defs {MouseTool {:meta {:file "/home/mbp/cljsketch/src/cljsketch/mouse_tools.cljs", :line 5, :column 14, :end-line 5, :end-column 23, :doc nil, :protocol-symbol true, :protocol-info {:methods {handle-event [[this event state]]}}}, :protocol-symbol true, :name cljsketch.mouse-tools/MouseTool, :file "src/cljsketch/mouse_tools.cljs", :end-column 23, :column 1, :line 5, :protocol-info {:methods {handle-event [[this event state]]}}, :info nil, :end-line 5, :impls #{cljsketch.mouse-tools/DrawPointTool cljsketch.mouse-tools/SelectMoveTool}, :doc nil}, ->SelectMoveTool {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/mouse_tools.cljs", :line 28, :column 12, :end-line 28, :end-column 26, :internal-ctor true, :factory :positional, :arglists (quote ([app-state redraw-canvas highlight! highlight selected? select! unselect! toggle-selected! clear-selection! selection]))}, :name cljsketch.mouse-tools/->SelectMoveTool, :variadic false, :file "src/cljsketch/mouse_tools.cljs", :end-column 26, :method-params ([app-state redraw-canvas highlight! highlight selected? select! unselect! toggle-selected! clear-selection! selection]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 28, :end-line 28, :max-fixed-arity 10, :fn-var true, :arglists (quote ([app-state redraw-canvas highlight! highlight selected? select! unselect! toggle-selected! clear-selection! selection]))}, map->DrawPointTool {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/mouse_tools.cljs", :line 84, :column 12, :end-line 84, :end-column 25, :internal-ctor true, :factory :map, :arglists (quote ([G__24000]))}, :name cljsketch.mouse-tools/map->DrawPointTool, :variadic false, :file "src/cljsketch/mouse_tools.cljs", :end-column 25, :method-params ([G__24000]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 84, :end-line 84, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__24000]))}, handle-event {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/mouse_tools.cljs", :line 6, :column 4, :end-line 6, :end-column 16, :protocol cljsketch.mouse-tools/MouseTool, :doc "Handle a mouse event", :arglists (quote ([this event state]))}, :protocol cljsketch.mouse-tools/MouseTool, :name cljsketch.mouse-tools/handle-event, :variadic false, :file "src/cljsketch/mouse_tools.cljs", :end-column 16, :method-params ([this event state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 6, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this event state])), :doc "Handle a mouse event"}, SelectMoveTool {:num-fields 10, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljsketch.mouse-tools/MouseTool cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name cljsketch.mouse-tools/SelectMoveTool, :file "src/cljsketch/mouse_tools.cljs", :end-column 26, :type true, :column 12, :internal-ctor true, :line 28, :record true, :end-line 28, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, map->SelectMoveTool {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/mouse_tools.cljs", :line 28, :column 12, :end-line 28, :end-column 26, :internal-ctor true, :factory :map, :arglists (quote ([G__23952]))}, :name cljsketch.mouse-tools/map->SelectMoveTool, :variadic false, :file "src/cljsketch/mouse_tools.cljs", :end-column 26, :method-params ([G__23952]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__23952]))}, geom-in-threshold {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/mouse_tools.cljs", :line 14, :column 7, :end-line 14, :end-column 24, :arglists (quote ([geoms mouse-pos t]))}, :name cljsketch.mouse-tools/geom-in-threshold, :variadic false, :file "src/cljsketch/mouse_tools.cljs", :end-column 24, :method-params ([geoms mouse-pos t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 3, :fn-var true, :arglists (quote ([geoms mouse-pos t]))}, ->DrawPointTool {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/mouse_tools.cljs", :line 84, :column 12, :end-line 84, :end-column 25, :internal-ctor true, :factory :positional, :arglists (quote ([app-state redraw-canvas add-point clear-selection! select!]))}, :name cljsketch.mouse-tools/->DrawPointTool, :variadic false, :file "src/cljsketch/mouse_tools.cljs", :end-column 25, :method-params ([app-state redraw-canvas add-point clear-selection! select!]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 84, :end-line 84, :max-fixed-arity 5, :fn-var true, :arglists (quote ([app-state redraw-canvas add-point clear-selection! select!]))}, gtless {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/mouse_tools.cljs", :line 9, :column 7, :end-line 9, :end-column 13, :arglists (quote ([t1 t2]))}, :name cljsketch.mouse-tools/gtless, :variadic false, :file "src/cljsketch/mouse_tools.cljs", :end-column 13, :method-params ([t1 t2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 2, :fn-var true, :arglists (quote ([t1 t2]))}, DrawPointTool {:num-fields 5, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljsketch.mouse-tools/MouseTool cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name cljsketch.mouse-tools/DrawPointTool, :file "src/cljsketch/mouse_tools.cljs", :end-column 25, :type true, :column 12, :internal-ctor true, :line 84, :record true, :end-line 84, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:down :add-point :drag-base :geom-drag-base :highlight :coords :toggle-selected! :button-state :move :type :select! :up :enter :highlight-selected :world :app-state :line :leave :segment :redraw-canvas :point :dragged :selection :selected? :unselect! :clear-selection! :highlight!}, :order [:point :segment :line :type :button-state :down :world :coords :geom-drag-base :move :up :highlight-selected :drag-base :dragged :enter :leave :app-state :redraw-canvas :highlight! :highlight :selected? :select! :unselect! :toggle-selected! :clear-selection! :selection :add-point]}, :doc nil}