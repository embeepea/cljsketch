;; Analyzed by ClojureScript 0.0-3297
{:use-macros nil, :excludes #{}, :name cljsketch.geom, :imports nil, :requires {v cljsketch.vector, cljsketch.vector cljsketch.vector}, :uses nil, :defs {->Point {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/geom.cljs", :line 8, :column 12, :end-line 8, :end-column 17, :internal-ctor true, :factory :positional, :arglists (quote ([x y]))}, :name cljsketch.geom/->Point, :variadic false, :file "src/cljsketch/geom.cljs", :end-column 17, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 8, :end-line 8, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, map->Line {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/geom.cljs", :line 13, :column 12, :end-line 13, :end-column 16, :internal-ctor true, :factory :map, :arglists (quote ([G__72751]))}, :name cljsketch.geom/map->Line, :variadic false, :file "src/cljsketch/geom.cljs", :end-column 16, :method-params ([G__72751]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__72751]))}, map->Point {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/geom.cljs", :line 8, :column 12, :end-line 8, :end-column 17, :internal-ctor true, :factory :map, :arglists (quote ([G__72743]))}, :name cljsketch.geom/map->Point, :variadic false, :file "src/cljsketch/geom.cljs", :end-column 17, :method-params ([G__72743]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__72743]))}, map->Segment {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/geom.cljs", :line 18, :column 12, :end-line 18, :end-column 19, :internal-ctor true, :factory :map, :arglists (quote ([G__72759]))}, :name cljsketch.geom/map->Segment, :variadic false, :file "src/cljsketch/geom.cljs", :end-column 19, :method-params ([G__72759]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__72759]))}, ->Segment {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/geom.cljs", :line 18, :column 12, :end-line 18, :end-column 19, :internal-ctor true, :factory :positional, :arglists (quote ([x0 y0 x1 y1]))}, :name cljsketch.geom/->Segment, :variadic false, :file "src/cljsketch/geom.cljs", :end-column 19, :method-params ([x0 y0 x1 y1]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 18, :end-line 18, :max-fixed-arity 4, :fn-var true, :arglists (quote ([x0 y0 x1 y1]))}, ->Line {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/geom.cljs", :line 13, :column 12, :end-line 13, :end-column 16, :internal-ctor true, :factory :positional, :arglists (quote ([u]))}, :name cljsketch.geom/->Line, :variadic false, :file "src/cljsketch/geom.cljs", :end-column 16, :method-params ([u]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([u]))}, Line {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljsketch.geom/IGeom cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name cljsketch.geom/Line, :file "src/cljsketch/geom.cljs", :end-column 16, :type true, :column 12, :internal-ctor true, :line 13, :record true, :end-line 13, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, Point {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljsketch.geom/IGeom cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name cljsketch.geom/Point, :file "src/cljsketch/geom.cljs", :end-column 17, :type true, :column 12, :internal-ctor true, :line 8, :record true, :end-line 8, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, IGeom {:meta {:file "/home/mbp/cljsketch/src/cljsketch/geom.cljs", :line 4, :column 14, :end-line 4, :end-column 19, :doc nil, :protocol-symbol true, :protocol-info {:methods {render [[this ctx]]}}}, :protocol-symbol true, :name cljsketch.geom/IGeom, :file "src/cljsketch/geom.cljs", :end-column 19, :column 1, :line 4, :protocol-info {:methods {render [[this ctx]]}}, :info nil, :end-line 4, :impls #{cljsketch.geom/Point cljsketch.geom/Line cljsketch.geom/Segment}, :doc nil}, render {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/geom.cljs", :line 5, :column 4, :end-line 5, :end-column 10, :protocol cljsketch.geom/IGeom, :doc "render this geom in the given graphics context", :arglists (quote ([this ctx]))}, :protocol cljsketch.geom/IGeom, :name cljsketch.geom/render, :variadic false, :file "src/cljsketch/geom.cljs", :end-column 10, :method-params ([this ctx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 5, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this ctx])), :doc "render this geom in the given graphics context"}, Segment {:num-fields 4, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljsketch.geom/IGeom cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name cljsketch.geom/Segment, :file "src/cljsketch/geom.cljs", :end-column 19, :type true, :column 12, :internal-ctor true, :line 18, :record true, :end-line 18, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:y :y1 :y0 :x :x1 :x0 :u}, :order [:x :y :u :x0 :y0 :x1 :y1]}, :doc nil}