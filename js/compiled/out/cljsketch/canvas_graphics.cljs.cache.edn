;; Analyzed by ClojureScript 0.0-3297
{:name cljsketch.canvas-graphics, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires nil, :imports nil, :defs {clear-canvas {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/canvas_graphics.cljs", :line 3, :column 7, :end-line 3, :end-column 19, :arglists (quote ([ctx]))}, :name cljsketch.canvas-graphics/clear-canvas, :variadic false, :file "src/cljsketch/canvas_graphics.cljs", :end-column 19, :method-params ([ctx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ctx]))}, draw-point {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/canvas_graphics.cljs", :line 10, :column 7, :end-line 10, :end-column 17, :arglists (quote ([ctx x y r]))}, :name cljsketch.canvas-graphics/draw-point, :variadic false, :file "src/cljsketch/canvas_graphics.cljs", :end-column 17, :method-params ([ctx x y r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 4, :fn-var true, :arglists (quote ([ctx x y r]))}, draw-circle {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/canvas_graphics.cljs", :line 15, :column 7, :end-line 15, :end-column 18, :arglists (quote ([ctx x y r t]))}, :name cljsketch.canvas-graphics/draw-circle, :variadic false, :file "src/cljsketch/canvas_graphics.cljs", :end-column 18, :method-params ([ctx x y r t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 5, :fn-var true, :arglists (quote ([ctx x y r t]))}, draw-line {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/canvas_graphics.cljs", :line 21, :column 7, :end-line 21, :end-column 16, :arglists (quote ([ctx x0 y0 x1 y1 t]))}, :name cljsketch.canvas-graphics/draw-line, :variadic false, :file "src/cljsketch/canvas_graphics.cljs", :end-column 16, :method-params ([ctx x0 y0 x1 y1 t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 6, :fn-var true, :arglists (quote ([ctx x0 y0 x1 y1 t]))}, random-points {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/canvas_graphics.cljs", :line 28, :column 7, :end-line 28, :end-column 20, :arglists (quote ([ctx n r]))}, :name cljsketch.canvas-graphics/random-points, :variadic false, :file "src/cljsketch/canvas_graphics.cljs", :end-column 20, :method-params ([ctx n r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ctx n r]))}, random-points-colors {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/canvas_graphics.cljs", :line 36, :column 7, :end-line 36, :end-column 27, :arglists (quote ([ctx n radius]))}, :name cljsketch.canvas-graphics/random-points-colors, :variadic false, :file "src/cljsketch/canvas_graphics.cljs", :end-column 27, :method-params ([ctx n radius]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ctx n radius]))}}}