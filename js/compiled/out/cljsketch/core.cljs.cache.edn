;; Analyzed by ClojureScript 0.0-3297
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name cljsketch.core, :imports nil, :requires {cljsketch.geom cljsketch.geom, cljsketch.ui cljsketch.ui, mt cljsketch.mouse-tools, dom om.dom, rg cljsketch.refgeom, om-tools.dom om-tools.dom, om-bootstrap.grid om-bootstrap.grid, v cljsketch.vector, om.dom om.dom, ui-scratch cljsketch.ui-scratch, cljs.core.async cljs.core.async, om-bootstrap.nav om-bootstrap.nav, grid om-bootstrap.grid, n om-bootstrap.nav, events goog.events, cljsketch.construction-tools cljsketch.construction-tools, cljsketch.ui-scratch cljsketch.ui-scratch, cljsketch.canvas-graphics cljsketch.canvas-graphics, cljsketch.mouse-tools cljsketch.mouse-tools, cljsketch.vector cljsketch.vector, cljsketch.refgeom cljsketch.refgeom, om.core om.core, gr cljsketch.canvas-graphics, om om.core, c cljsketch.construction-tools, g cljsketch.geom, om-bootstrap.button om-bootstrap.button, ui cljsketch.ui, goog.events goog.events, b om-bootstrap.button, d om-tools.dom}, :uses {<! cljs.core.async, chan cljs.core.async, put! cljs.core.async}, :defs {ctx {:name cljsketch.core/ctx, :file "src/cljsketch/core.cljs", :line 25, :column 1, :end-line 25, :end-column 9, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 25, :column 6, :end-line 25, :end-column 9}}, selection {:name cljsketch.core/selection, :file "src/cljsketch/core.cljs", :line 75, :column 1, :end-line 75, :end-column 19, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 75, :column 10, :end-line 75, :end-column 19}}, selected? {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 78, :column 7, :end-line 78, :end-column 16, :arglists (quote ([geom]))}, :name cljsketch.core/selected?, :variadic false, :file "src/cljsketch/core.cljs", :end-column 16, :method-params ([geom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 1, :fn-var true, :arglists (quote ([geom]))}, unselect! {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 86, :column 7, :end-line 86, :end-column 16, :arglists (quote ([geom]))}, :name cljsketch.core/unselect!, :variadic false, :file "src/cljsketch/core.cljs", :end-column 16, :method-params ([geom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 1, :fn-var true, :arglists (quote ([geom]))}, clear-selection! {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 95, :column 7, :end-line 95, :end-column 23, :arglists (quote ([]))}, :name cljsketch.core/clear-selection!, :variadic false, :file "src/cljsketch/core.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, highlight! {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 68, :column 7, :end-line 68, :end-column 17, :arglists (quote ([geom]))}, :name cljsketch.core/highlight!, :variadic false, :file "src/cljsketch/core.cljs", :end-column 17, :method-params ([geom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 1, :fn-var true, :arglists (quote ([geom]))}, index-of-first {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 145, :column 7, :end-line 145, :end-column 21, :arglists (quote ([pred coll]))}, :name cljsketch.core/index-of-first, :variadic false, :file "src/cljsketch/core.cljs", :end-column 21, :method-params ([pred coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred coll]))}, enable-fitting-tools {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 161, :column 7, :end-line 161, :end-column 27, :arglists (quote ([]))}, :name cljsketch.core/enable-fitting-tools, :variadic false, :file "src/cljsketch/core.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 161, :end-line 161, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-point {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 126, :column 7, :end-line 126, :end-column 16, :arglists (quote ([[x y]]))}, :name cljsketch.core/add-point, :variadic false, :file "src/cljsketch/core.cljs", :end-column 16, :method-params ([p__29415]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 126, :end-line 126, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[x y]]))}, menu-item-handler {:name cljsketch.core/menu-item-handler, :file "src/cljsketch/core.cljs", :line 181, :column 1, :end-line 181, :end-column 28, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 181, :column 11, :end-line 181, :end-column 28}}, highlight {:name cljsketch.core/highlight, :file "src/cljsketch/core.cljs", :line 64, :column 1, :end-line 64, :end-column 19, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 64, :column 10, :end-line 64, :end-column 19}}, toggle-selected! {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 91, :column 7, :end-line 91, :end-column 23, :arglists (quote ([geom]))}, :name cljsketch.core/toggle-selected!, :variadic false, :file "src/cljsketch/core.cljs", :end-column 23, :method-params ([geom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 1, :fn-var true, :arglists (quote ([geom]))}, run-app {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 237, :column 7, :end-line 237, :end-column 14, :arglists (quote ([_ctx menu-channel mouse-channel]))}, :name cljsketch.core/run-app, :variadic false, :file "src/cljsketch/core.cljs", :end-column 14, :method-params ([_ctx menu-channel mouse-channel]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 237, :end-line 237, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ctx menu-channel mouse-channel]))}, navbar-menu {:name cljsketch.core/navbar-menu, :file "src/cljsketch/core.cljs", :line 27, :column 1, :end-line 27, :end-column 17, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 27, :column 6, :end-line 27, :end-column 17}}, construction-tools {:name cljsketch.core/construction-tools, :file "src/cljsketch/core.cljs", :line 132, :column 1, :end-line 132, :end-column 24, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 132, :column 6, :end-line 132, :end-column 24}}, select! {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 81, :column 7, :end-line 81, :end-column 14, :arglists (quote ([geom]))}, :name cljsketch.core/select!, :variadic false, :file "src/cljsketch/core.cljs", :end-column 14, :method-params ([geom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists (quote ([geom]))}, construct-and-redraw {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 169, :column 7, :end-line 169, :end-column 27, :arglists (quote ([tool]))}, :name cljsketch.core/construct-and-redraw, :variadic false, :file "src/cljsketch/core.cljs", :end-column 27, :method-params ([tool]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 169, :end-line 169, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tool]))}, app-state {:name cljsketch.core/app-state, :file "src/cljsketch/core.cljs", :line 48, :column 1, :end-line 48, :end-column 19, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 48, :column 10, :end-line 48, :end-column 19}}, mouse-tools {:name cljsketch.core/mouse-tools, :file "src/cljsketch/core.cljs", :line 176, :column 1, :end-line 176, :end-column 17, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 176, :column 6, :end-line 176, :end-column 17}}, redraw-canvas {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 110, :column 7, :end-line 110, :end-column 20, :arglists (quote ([]))}, :name cljsketch.core/redraw-canvas, :variadic false, :file "src/cljsketch/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, on-js-reload {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 252, :column 7, :end-line 252, :end-column 19, :arglists (quote ([]))}, :name cljsketch.core/on-js-reload, :variadic false, :file "src/cljsketch/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 252, :end-line 252, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-geom {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 120, :column 7, :end-line 120, :end-column 15, :arglists (quote ([geom]))}, :name cljsketch.core/add-geom, :variadic false, :file "src/cljsketch/core.cljs", :end-column 15, :method-params ([geom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 120, :end-line 120, :max-fixed-arity 1, :fn-var true, :arglists (quote ([geom]))}, clear-geoms {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 174, :column 7, :end-line 174, :end-column 18, :arglists (quote ([]))}, :name cljsketch.core/clear-geoms, :variadic false, :file "src/cljsketch/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 174, :end-line 174, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, draw-line {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 99, :column 7, :end-line 99, :end-column 16, :arglists (quote ([pvec t]))}, :name cljsketch.core/draw-line, :variadic false, :file "src/cljsketch/core.cljs", :end-column 16, :method-params ([pvec t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pvec t]))}, highlight? {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 71, :column 7, :end-line 71, :end-column 17, :arglists (quote ([geom]))}, :name cljsketch.core/highlight?, :variadic false, :file "src/cljsketch/core.cljs", :end-column 17, :method-params ([geom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 1, :fn-var true, :arglists (quote ([geom]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, om om.core, om.core om.core, dom om.dom, om.dom om.dom, d om-tools.dom, om-tools.dom om-tools.dom}, :cljs.analyzer/constants {:seen #{:draw-point :open :color :key :else :default :background-color :laebl :circle :midpoint :recur :delete :className :title :enabled-tools :perpendicular-line :world :line :clear-selection :segment :label :mouse-tools :styles :parallel-line :items :hierarchy :mouse-tool :intersection-point :new-sketch :select :u}, :order [:title :items :key :label :new-sketch :laebl :open :delete :clear-selection :className :segment :line :parallel-line :perpendicular-line :intersection-point :midpoint :circle :enabled-tools :color :background-color :mouse-tool :mouse-tools :world :styles :draw-point :select :u :hierarchy :default :recur :else]}, :doc nil}