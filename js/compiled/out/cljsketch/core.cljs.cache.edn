;; Analyzed by ClojureScript 0.0-3297
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name cljsketch.core, :imports nil, :requires {cljsketch.geom cljsketch.geom, cljsketch.ui cljsketch.ui, mt cljsketch.mouse-tools, dom om.dom, rg cljsketch.refgeom, om-tools.dom om-tools.dom, om-bootstrap.grid om-bootstrap.grid, v cljsketch.vector, om.dom om.dom, cljs.core.async cljs.core.async, om-bootstrap.nav om-bootstrap.nav, grid om-bootstrap.grid, n om-bootstrap.nav, events goog.events, cljsketch.construction-tools cljsketch.construction-tools, cljsketch.canvas-graphics cljsketch.canvas-graphics, cljsketch.mouse-tools cljsketch.mouse-tools, cljsketch.vector cljsketch.vector, cljsketch.refgeom cljsketch.refgeom, om.core om.core, gr cljsketch.canvas-graphics, om om.core, c cljsketch.construction-tools, g cljsketch.geom, om-bootstrap.button om-bootstrap.button, ui cljsketch.ui, goog.events goog.events, b om-bootstrap.button, d om-tools.dom}, :uses {<! cljs.core.async, chan cljs.core.async, put! cljs.core.async}, :defs {ctx {:name cljsketch.core/ctx, :file "src/cljsketch/core.cljs", :line 24, :column 1, :end-line 24, :end-column 9, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 24, :column 6, :end-line 24, :end-column 9}}, selection {:name cljsketch.core/selection, :file "src/cljsketch/core.cljs", :line 70, :column 1, :end-line 70, :end-column 19, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 70, :column 10, :end-line 70, :end-column 19}}, selected? {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 73, :column 7, :end-line 73, :end-column 16, :arglists (quote ([geom]))}, :name cljsketch.core/selected?, :variadic false, :file "src/cljsketch/core.cljs", :end-column 16, :method-params ([geom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 1, :fn-var true, :arglists (quote ([geom]))}, unselect! {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 81, :column 7, :end-line 81, :end-column 16, :arglists (quote ([geom]))}, :name cljsketch.core/unselect!, :variadic false, :file "src/cljsketch/core.cljs", :end-column 16, :method-params ([geom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists (quote ([geom]))}, clear-selection! {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 90, :column 7, :end-line 90, :end-column 23, :arglists (quote ([]))}, :name cljsketch.core/clear-selection!, :variadic false, :file "src/cljsketch/core.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, highlight! {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 63, :column 7, :end-line 63, :end-column 17, :arglists (quote ([geom]))}, :name cljsketch.core/highlight!, :variadic false, :file "src/cljsketch/core.cljs", :end-column 17, :method-params ([geom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 1, :fn-var true, :arglists (quote ([geom]))}, index-of-first {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 138, :column 7, :end-line 138, :end-column 21, :arglists (quote ([pred coll]))}, :name cljsketch.core/index-of-first, :variadic false, :file "src/cljsketch/core.cljs", :end-column 21, :method-params ([pred coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 138, :end-line 138, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred coll]))}, enable-fitting-tools {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 141, :column 7, :end-line 141, :end-column 27, :arglists (quote ([]))}, :name cljsketch.core/enable-fitting-tools, :variadic false, :file "src/cljsketch/core.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-point {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 119, :column 7, :end-line 119, :end-column 16, :arglists (quote ([[x y]]))}, :name cljsketch.core/add-point, :variadic false, :file "src/cljsketch/core.cljs", :end-column 16, :method-params ([p__24401]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 119, :end-line 119, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[x y]]))}, menu-item-handler {:name cljsketch.core/menu-item-handler, :file "src/cljsketch/core.cljs", :line 169, :column 1, :end-line 169, :end-column 28, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 169, :column 11, :end-line 169, :end-column 28}}, highlight {:name cljsketch.core/highlight, :file "src/cljsketch/core.cljs", :line 59, :column 1, :end-line 59, :end-column 19, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 59, :column 10, :end-line 59, :end-column 19}}, toggle-selected! {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 86, :column 7, :end-line 86, :end-column 23, :arglists (quote ([geom]))}, :name cljsketch.core/toggle-selected!, :variadic false, :file "src/cljsketch/core.cljs", :end-column 23, :method-params ([geom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 1, :fn-var true, :arglists (quote ([geom]))}, run-app {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 216, :column 7, :end-line 216, :end-column 14, :arglists (quote ([_ctx menu-channel mouse-channel]))}, :name cljsketch.core/run-app, :variadic false, :file "src/cljsketch/core.cljs", :end-column 14, :method-params ([_ctx menu-channel mouse-channel]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 216, :end-line 216, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_ctx menu-channel mouse-channel]))}, navbar-menu {:name cljsketch.core/navbar-menu, :file "src/cljsketch/core.cljs", :line 26, :column 1, :end-line 26, :end-column 17, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 26, :column 6, :end-line 26, :end-column 17}}, construction-tools {:name cljsketch.core/construction-tools, :file "src/cljsketch/core.cljs", :line 125, :column 1, :end-line 125, :end-column 24, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 125, :column 6, :end-line 125, :end-column 24}}, select! {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 76, :column 7, :end-line 76, :end-column 14, :arglists (quote ([geom]))}, :name cljsketch.core/select!, :variadic false, :file "src/cljsketch/core.cljs", :end-column 14, :method-params ([geom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists (quote ([geom]))}, construct-and-redraw {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 157, :column 7, :end-line 157, :end-column 27, :arglists (quote ([tool]))}, :name cljsketch.core/construct-and-redraw, :variadic false, :file "src/cljsketch/core.cljs", :end-column 27, :method-params ([tool]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 157, :end-line 157, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tool]))}, app-state {:name cljsketch.core/app-state, :file "src/cljsketch/core.cljs", :line 47, :column 1, :end-line 47, :end-column 19, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 47, :column 10, :end-line 47, :end-column 19}}, mouse-tools {:name cljsketch.core/mouse-tools, :file "src/cljsketch/core.cljs", :line 164, :column 1, :end-line 164, :end-column 17, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 164, :column 6, :end-line 164, :end-column 17}}, redraw-canvas {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 105, :column 7, :end-line 105, :end-column 20, :arglists (quote ([]))}, :name cljsketch.core/redraw-canvas, :variadic false, :file "src/cljsketch/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, on-js-reload {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 231, :column 7, :end-line 231, :end-column 19, :arglists (quote ([]))}, :name cljsketch.core/on-js-reload, :variadic false, :file "src/cljsketch/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 231, :end-line 231, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, add-geom {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 114, :column 7, :end-line 114, :end-column 15, :arglists (quote ([geom]))}, :name cljsketch.core/add-geom, :variadic false, :file "src/cljsketch/core.cljs", :end-column 15, :method-params ([geom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 114, :end-line 114, :max-fixed-arity 1, :fn-var true, :arglists (quote ([geom]))}, clear-geoms {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 162, :column 7, :end-line 162, :end-column 18, :arglists (quote ([]))}, :name cljsketch.core/clear-geoms, :variadic false, :file "src/cljsketch/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 162, :end-line 162, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, draw-line {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 94, :column 7, :end-line 94, :end-column 16, :arglists (quote ([pvec t]))}, :name cljsketch.core/draw-line, :variadic false, :file "src/cljsketch/core.cljs", :end-column 16, :method-params ([pvec t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pvec t]))}, highlight? {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/core.cljs", :line 66, :column 7, :end-line 66, :end-column 17, :arglists (quote ([geom]))}, :name cljsketch.core/highlight?, :variadic false, :file "src/cljsketch/core.cljs", :end-column 17, :method-params ([geom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 1, :fn-var true, :arglists (quote ([geom]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, om om.core, om.core om.core, dom om.dom, om.dom om.dom, d om-tools.dom, om-tools.dom om-tools.dom}, :cljs.analyzer/constants {:seen #{:draw-point :open :key :else :default :laebl :circle :midpoint :recur :navbar-menu :delete :className :title :perpendicular-line :world :line :clear-selection :segment :label :mouse-tools :parallel-line :items :hierarchy :mouse-tool :intersection-point :new-sketch :select :u}, :order [:title :items :key :label :new-sketch :laebl :open :delete :clear-selection :className :segment :line :parallel-line :perpendicular-line :intersection-point :midpoint :circle :navbar-menu :mouse-tool :mouse-tools :world :draw-point :select :u :hierarchy :default :recur :else]}, :doc nil}