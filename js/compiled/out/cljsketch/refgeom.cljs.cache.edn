;; Analyzed by ClojureScript 0.0-3297
{:use-macros nil, :excludes #{}, :name cljsketch.refgeom, :imports nil, :requires {v cljsketch.vector, cljsketch.vector cljsketch.vector, g cljsketch.geom, cljsketch.geom cljsketch.geom}, :uses nil, :defs {toGeom {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/refgeom.cljs", :line 8, :column 4, :end-line 8, :end-column 10, :protocol cljsketch.refgeom/IRefGeom, :doc "return a geom for this refgeom", :arglists (quote ([this geommap]))}, :protocol cljsketch.refgeom/IRefGeom, :name cljsketch.refgeom/toGeom, :variadic false, :file "src/cljsketch/refgeom.cljs", :end-column 10, :method-params ([this geommap]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 8, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this geommap])), :doc "return a geom for this refgeom"}, ->PointPerpendicularLine {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/refgeom.cljs", :line 36, :column 12, :end-line 36, :end-column 34, :internal-ctor true, :factory :positional, :arglists (quote ([pt ln]))}, :name cljsketch.refgeom/->PointPerpendicularLine, :variadic false, :file "src/cljsketch/refgeom.cljs", :end-column 34, :method-params ([pt ln]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pt ln]))}, PointPointSegment {:num-fields 2, :protocols #{cljs.core/IRecord cljsketch.refgeom/IRefGeom cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name cljsketch.refgeom/PointPointSegment, :file "src/cljsketch/refgeom.cljs", :end-column 29, :type true, :column 12, :internal-ctor true, :line 15, :record true, :end-line 15, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, deps {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/refgeom.cljs", :line 9, :column 4, :end-line 9, :end-column 8, :protocol cljsketch.refgeom/IRefGeom, :doc "return a sequence of atoms referring to the objects\n    (Geoms or RefGeoms) that this RefGeom depends on", :arglists (quote ([this]))}, :protocol cljsketch.refgeom/IRefGeom, :name cljsketch.refgeom/deps, :variadic false, :file "src/cljsketch/refgeom.cljs", :end-column 8, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "return a sequence of atoms referring to the objects\n    (Geoms or RefGeoms) that this RefGeom depends on"}, PointPointLine {:num-fields 2, :protocols #{cljs.core/IRecord cljsketch.refgeom/IRefGeom cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name cljsketch.refgeom/PointPointLine, :file "src/cljsketch/refgeom.cljs", :end-column 26, :type true, :column 12, :internal-ctor true, :line 25, :record true, :end-line 25, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, map->PointPointSegment {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/refgeom.cljs", :line 15, :column 12, :end-line 15, :end-column 29, :internal-ctor true, :factory :map, :arglists (quote ([G__29056]))}, :name cljsketch.refgeom/map->PointPointSegment, :variadic false, :file "src/cljsketch/refgeom.cljs", :end-column 29, :method-params ([G__29056]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__29056]))}, ->PointPointSegment {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/refgeom.cljs", :line 15, :column 12, :end-line 15, :end-column 29, :internal-ctor true, :factory :positional, :arglists (quote ([pt0 pt1]))}, :name cljsketch.refgeom/->PointPointSegment, :variadic false, :file "src/cljsketch/refgeom.cljs", :end-column 29, :method-params ([pt0 pt1]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pt0 pt1]))}, ->LineLinePoint {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/refgeom.cljs", :line 56, :column 12, :end-line 56, :end-column 25, :internal-ctor true, :factory :positional, :arglists (quote ([ln0 ln1]))}, :name cljsketch.refgeom/->LineLinePoint, :variadic false, :file "src/cljsketch/refgeom.cljs", :end-column 25, :method-params ([ln0 ln1]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 56, :end-line 56, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ln0 ln1]))}, map->PointParallelLine {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/refgeom.cljs", :line 46, :column 12, :end-line 46, :end-column 29, :internal-ctor true, :factory :map, :arglists (quote ([G__29080]))}, :name cljsketch.refgeom/map->PointParallelLine, :variadic false, :file "src/cljsketch/refgeom.cljs", :end-column 29, :method-params ([G__29080]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__29080]))}, IRefGeom {:meta {:file "/home/mbp/cljsketch/src/cljsketch/refgeom.cljs", :line 5, :column 14, :end-line 5, :end-column 22, :doc nil, :protocol-symbol true, :protocol-info {:methods {toGeom [[this geommap]], deps [[this]], geom-type [[this]]}}}, :protocol-symbol true, :name cljsketch.refgeom/IRefGeom, :file "src/cljsketch/refgeom.cljs", :end-column 22, :column 1, :line 5, :protocol-info {:methods {toGeom [[this geommap]], deps [[this]], geom-type [[this]]}}, :info nil, :end-line 5, :impls #{cljsketch.refgeom/PointParallelLine cljsketch.refgeom/LineLinePoint cljsketch.refgeom/PointPerpendicularLine cljsketch.refgeom/PointPointSegment cljsketch.refgeom/PointPointLine}, :doc nil}, geommap {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/refgeom.cljs", :line 76, :column 7, :end-line 76, :end-column 14, :arglists (quote ([atoms]))}, :name cljsketch.refgeom/geommap, :variadic false, :file "src/cljsketch/refgeom.cljs", :end-column 14, :method-params ([atoms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists (quote ([atoms]))}, PointParallelLine {:num-fields 2, :protocols #{cljs.core/IRecord cljsketch.refgeom/IRefGeom cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name cljsketch.refgeom/PointParallelLine, :file "src/cljsketch/refgeom.cljs", :end-column 29, :type true, :column 12, :internal-ctor true, :line 46, :record true, :end-line 46, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->PointParallelLine {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/refgeom.cljs", :line 46, :column 12, :end-line 46, :end-column 29, :internal-ctor true, :factory :positional, :arglists (quote ([pt ln]))}, :name cljsketch.refgeom/->PointParallelLine, :variadic false, :file "src/cljsketch/refgeom.cljs", :end-column 29, :method-params ([pt ln]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pt ln]))}, map->PointPointLine {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/refgeom.cljs", :line 25, :column 12, :end-line 25, :end-column 26, :internal-ctor true, :factory :map, :arglists (quote ([G__29064]))}, :name cljsketch.refgeom/map->PointPointLine, :variadic false, :file "src/cljsketch/refgeom.cljs", :end-column 26, :method-params ([G__29064]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__29064]))}, map->LineLinePoint {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/refgeom.cljs", :line 56, :column 12, :end-line 56, :end-column 25, :internal-ctor true, :factory :map, :arglists (quote ([G__29088]))}, :name cljsketch.refgeom/map->LineLinePoint, :variadic false, :file "src/cljsketch/refgeom.cljs", :end-column 25, :method-params ([G__29088]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 56, :end-line 56, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__29088]))}, map->PointPerpendicularLine {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/refgeom.cljs", :line 36, :column 12, :end-line 36, :end-column 34, :internal-ctor true, :factory :map, :arglists (quote ([G__29072]))}, :name cljsketch.refgeom/map->PointPerpendicularLine, :variadic false, :file "src/cljsketch/refgeom.cljs", :end-column 34, :method-params ([G__29072]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__29072]))}, ->PointPointLine {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/refgeom.cljs", :line 25, :column 12, :end-line 25, :end-column 26, :internal-ctor true, :factory :positional, :arglists (quote ([pt0 pt1]))}, :name cljsketch.refgeom/->PointPointLine, :variadic false, :file "src/cljsketch/refgeom.cljs", :end-column 26, :method-params ([pt0 pt1]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 25, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pt0 pt1]))}, LineLinePoint {:num-fields 2, :protocols #{cljs.core/IRecord cljsketch.refgeom/IRefGeom cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name cljsketch.refgeom/LineLinePoint, :file "src/cljsketch/refgeom.cljs", :end-column 25, :type true, :column 12, :internal-ctor true, :line 56, :record true, :end-line 56, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, geom-type {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/refgeom.cljs", :line 11, :column 4, :end-line 11, :end-column 13, :protocol cljsketch.refgeom/IRefGeom, :doc "", :arglists (quote ([this]))}, :protocol cljsketch.refgeom/IRefGeom, :name cljsketch.refgeom/geom-type, :variadic false, :file "src/cljsketch/refgeom.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc ""}, PointPerpendicularLine {:num-fields 2, :protocols #{cljs.core/IRecord cljsketch.refgeom/IRefGeom cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name cljsketch.refgeom/PointPerpendicularLine, :file "src/cljsketch/refgeom.cljs", :end-column 34, :type true, :column 12, :internal-ctor true, :line 36, :record true, :end-line 36, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:pt :pt0 :ln :ln0 :pt1 :ln1 :p :u}, :order [:pt0 :pt1 :p :pt :ln :u :ln0 :ln1]}, :doc nil}