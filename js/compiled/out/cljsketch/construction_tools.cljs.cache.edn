;; Analyzed by ClojureScript 0.0-3297
{:name cljsketch.construction-tools, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {g cljsketch.geom, cljsketch.geom cljsketch.geom, rg cljsketch.refgeom, cljsketch.refgeom cljsketch.refgeom}, :imports nil, :defs {map->ParallelLineConstructionTool {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/construction_tools.cljs", :line 40, :column 12, :end-line 40, :end-column 40, :internal-ctor true, :factory :map, :arglists (quote ([G__30644]))}, :name cljsketch.construction-tools/map->ParallelLineConstructionTool, :variadic false, :file "src/cljsketch/construction_tools.cljs", :end-column 40, :method-params ([G__30644]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__30644]))}, LineConstructionTool {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljsketch.construction-tools/IConstructionTool cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name cljsketch.construction-tools/LineConstructionTool, :file "src/cljsketch/construction_tools.cljs", :end-column 32, :type true, :column 12, :internal-ctor true, :line 32, :record true, :end-line 32, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, construct {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/construction_tools.cljs", :line 19, :column 4, :end-line 19, :end-column 13, :protocol cljsketch.construction-tools/IConstructionTool, :doc "executes this tool on the current selection, returning the newly\n     constructed object", :arglists (quote ([this selected]))}, :protocol cljsketch.construction-tools/IConstructionTool, :name cljsketch.construction-tools/construct, :variadic false, :file "src/cljsketch/construction_tools.cljs", :end-column 13, :method-params ([this selected]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this selected])), :doc "executes this tool on the current selection, returning the newly\n     constructed object"}, first-object-of-type {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/construction_tools.cljs", :line 11, :column 7, :end-line 11, :end-column 27, :arglists (quote ([typ geoms]))}, :name cljsketch.construction-tools/first-object-of-type, :variadic false, :file "src/cljsketch/construction_tools.cljs", :end-column 27, :method-params ([typ geoms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 2, :fn-var true, :arglists (quote ([typ geoms]))}, SegmentConstructionTool {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljsketch.construction-tools/IConstructionTool cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name cljsketch.construction-tools/SegmentConstructionTool, :file "src/cljsketch/construction_tools.cljs", :end-column 35, :type true, :column 12, :internal-ctor true, :line 24, :record true, :end-line 24, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->ParallelLineConstructionTool {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/construction_tools.cljs", :line 40, :column 12, :end-line 40, :end-column 40, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name cljsketch.construction-tools/->ParallelLineConstructionTool, :variadic false, :file "src/cljsketch/construction_tools.cljs", :end-column 40, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 40, :end-line 40, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ParallelLineConstructionTool {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljsketch.construction-tools/IConstructionTool cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name cljsketch.construction-tools/ParallelLineConstructionTool, :file "src/cljsketch/construction_tools.cljs", :end-column 40, :type true, :column 12, :internal-ctor true, :line 40, :record true, :end-line 40, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, map->LineIntersectionConstructionTool {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/construction_tools.cljs", :line 60, :column 12, :end-line 60, :end-column 44, :internal-ctor true, :factory :map, :arglists (quote ([G__30660]))}, :name cljsketch.construction-tools/map->LineIntersectionConstructionTool, :variadic false, :file "src/cljsketch/construction_tools.cljs", :end-column 44, :method-params ([G__30660]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 60, :end-line 60, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__30660]))}, ->PerpendicularLineConstructionTool {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/construction_tools.cljs", :line 50, :column 12, :end-line 50, :end-column 45, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name cljsketch.construction-tools/->PerpendicularLineConstructionTool, :variadic false, :file "src/cljsketch/construction_tools.cljs", :end-column 45, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 50, :end-line 50, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, map->LineConstructionTool {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/construction_tools.cljs", :line 32, :column 12, :end-line 32, :end-column 32, :internal-ctor true, :factory :map, :arglists (quote ([G__30636]))}, :name cljsketch.construction-tools/map->LineConstructionTool, :variadic false, :file "src/cljsketch/construction_tools.cljs", :end-column 32, :method-params ([G__30636]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__30636]))}, ->LineConstructionTool {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/construction_tools.cljs", :line 32, :column 12, :end-line 32, :end-column 32, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name cljsketch.construction-tools/->LineConstructionTool, :variadic false, :file "src/cljsketch/construction_tools.cljs", :end-column 32, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 32, :end-line 32, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, types {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/construction_tools.cljs", :line 7, :column 7, :end-line 7, :end-column 12, :arglists (quote ([geoms]))}, :name cljsketch.construction-tools/types, :variadic false, :file "src/cljsketch/construction_tools.cljs", :end-column 12, :method-params ([geoms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([geoms]))}, ->SegmentConstructionTool {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/construction_tools.cljs", :line 24, :column 12, :end-line 24, :end-column 35, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name cljsketch.construction-tools/->SegmentConstructionTool, :variadic false, :file "src/cljsketch/construction_tools.cljs", :end-column 35, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 24, :end-line 24, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, LineIntersectionConstructionTool {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljsketch.construction-tools/IConstructionTool cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name cljsketch.construction-tools/LineIntersectionConstructionTool, :file "src/cljsketch/construction_tools.cljs", :end-column 44, :type true, :column 12, :internal-ctor true, :line 60, :record true, :end-line 60, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, IConstructionTool {:meta {:file "/home/mbp/cljsketch/src/cljsketch/construction_tools.cljs", :line 14, :column 14, :end-line 14, :end-column 31, :doc nil, :protocol-symbol true, :protocol-info {:methods {selection-fits [[this selected]], construct [[this selected]]}}}, :protocol-symbol true, :name cljsketch.construction-tools/IConstructionTool, :file "src/cljsketch/construction_tools.cljs", :end-column 31, :column 1, :line 14, :protocol-info {:methods {selection-fits [[this selected]], construct [[this selected]]}}, :info nil, :end-line 14, :impls #{cljsketch.construction-tools/LineConstructionTool cljsketch.construction-tools/SegmentConstructionTool cljsketch.construction-tools/ParallelLineConstructionTool cljsketch.construction-tools/LineIntersectionConstructionTool cljsketch.construction-tools/PerpendicularLineConstructionTool}, :doc nil}, map->SegmentConstructionTool {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/construction_tools.cljs", :line 24, :column 12, :end-line 24, :end-column 35, :internal-ctor true, :factory :map, :arglists (quote ([G__30628]))}, :name cljsketch.construction-tools/map->SegmentConstructionTool, :variadic false, :file "src/cljsketch/construction_tools.cljs", :end-column 35, :method-params ([G__30628]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__30628]))}, ->LineIntersectionConstructionTool {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/construction_tools.cljs", :line 60, :column 12, :end-line 60, :end-column 44, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name cljsketch.construction-tools/->LineIntersectionConstructionTool, :variadic false, :file "src/cljsketch/construction_tools.cljs", :end-column 44, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 60, :end-line 60, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, map->PerpendicularLineConstructionTool {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/construction_tools.cljs", :line 50, :column 12, :end-line 50, :end-column 45, :internal-ctor true, :factory :map, :arglists (quote ([G__30652]))}, :name cljsketch.construction-tools/map->PerpendicularLineConstructionTool, :variadic false, :file "src/cljsketch/construction_tools.cljs", :end-column 45, :method-params ([G__30652]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__30652]))}, selection-fits {:protocol-inline nil, :meta {:file "/home/mbp/cljsketch/src/cljsketch/construction_tools.cljs", :line 17, :column 4, :end-line 17, :end-column 18, :protocol cljsketch.construction-tools/IConstructionTool, :doc "true iff the objects in a collection fit the needs of this tool", :arglists (quote ([this selected]))}, :protocol cljsketch.construction-tools/IConstructionTool, :name cljsketch.construction-tools/selection-fits, :variadic false, :file "src/cljsketch/construction_tools.cljs", :end-column 18, :method-params ([this selected]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this selected])), :doc "true iff the objects in a collection fit the needs of this tool"}, PerpendicularLineConstructionTool {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljsketch.construction-tools/IConstructionTool cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name cljsketch.construction-tools/PerpendicularLineConstructionTool, :file "src/cljsketch/construction_tools.cljs", :end-column 45, :type true, :column 12, :internal-ctor true, :line 50, :record true, :end-line 50, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}}}