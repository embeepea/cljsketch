;; Analyzed by ClojureScript 0.0-3297
{:use-macros nil, :excludes #{}, :name om-bootstrap.grid, :imports nil, :requires {t om-bootstrap.types, om-bootstrap.types om-bootstrap.types, u om-bootstrap.util, om-bootstrap.util om-bootstrap.util, d om-tools.dom, om-tools.dom om-tools.dom, s schema.core, schema.core schema.core}, :uses nil, :defs {Grid {:name om-bootstrap.grid/Grid, :file "resources/public/js/compiled/out/om_bootstrap/grid.cljs", :line 10, :column 1, :end-line 10, :end-column 10, :meta {:file "/home/mbp/cljsketch/resources/public/js/compiled/out/om_bootstrap/grid.cljs", :line 10, :column 6, :end-line 10, :end-column 10}}, col-keys {:name om-bootstrap.grid/col-keys, :file "resources/public/js/compiled/out/om_bootstrap/grid.cljs", :line 14, :column 1, :end-line 14, :end-column 14, :meta {:file "/home/mbp/cljsketch/resources/public/js/compiled/out/om_bootstrap/grid.cljs", :line 14, :column 6, :end-line 14, :end-column 14}}, Col {:name om-bootstrap.grid/Col, :file "resources/public/js/compiled/out/om_bootstrap/grid.cljs", :line 20, :column 1, :end-line 20, :end-column 9, :meta {:file "/home/mbp/cljsketch/resources/public/js/compiled/out/om_bootstrap/grid.cljs", :line 20, :column 6, :end-line 20, :end-column 9}}, grid {:schema (schema.core/make-fn-schema output-schema28849 [input-schema28850]), :protocol-inline nil, :meta {:schema (schema.core/make-fn-schema output-schema28849 [input-schema28850]), :file "/home/mbp/cljsketch/resources/public/js/compiled/out/om_bootstrap/grid.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(G__28853 rest28854)], :arglists ([G__28853 & rest28854]), :arglists-meta (nil)}, :column 9, :raw-arglists (quote ([opts :- Grid & children])), :line 28, :end-line 28, :arglists (quote ([opts & children])), :doc "Inputs: [opts :- Grid & children]\n  Returns: t/Component\n\n  Generates a wrapper for a bootstrap grid."}, :name om-bootstrap.grid/grid, :variadic true, :file "resources/public/js/compiled/out/om_bootstrap/grid.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(G__28853 rest28854)], :arglists ([G__28853 & rest28854]), :arglists-meta (nil)}, :method-params [(G__28853 rest28854)], :protocol-impl nil, :arglists-meta (nil), :column 1, :raw-arglists (quote ([opts :- Grid & children])), :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists ([G__28853 & rest28854]), :doc "Inputs: [opts :- Grid & children]\n  Returns: t/Component\n\n  Generates a wrapper for a bootstrap grid."}, row {:schema (schema.core/make-fn-schema output-schema28868 [input-schema28869]), :protocol-inline nil, :meta {:schema (schema.core/make-fn-schema output-schema28868 [input-schema28869]), :file "/home/mbp/cljsketch/resources/public/js/compiled/out/om_bootstrap/grid.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(G__28872 rest28873)], :arglists ([G__28872 & rest28873]), :arglists-meta (nil)}, :column 9, :raw-arglists (quote ([opts & children])), :line 38, :end-line 38, :arglists (quote ([opts & children])), :doc "Inputs: [opts & children]\n  Returns: t/Component\n\n  Generates a Bootstrap row element."}, :name om-bootstrap.grid/row, :variadic true, :file "resources/public/js/compiled/out/om_bootstrap/grid.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(G__28872 rest28873)], :arglists ([G__28872 & rest28873]), :arglists-meta (nil)}, :method-params [(G__28872 rest28873)], :protocol-impl nil, :arglists-meta (nil), :column 1, :raw-arglists (quote ([opts & children])), :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists ([G__28872 & rest28873]), :doc "Inputs: [opts & children]\n  Returns: t/Component\n\n  Generates a Bootstrap row element."}, col {:schema (schema.core/make-fn-schema output-schema28886 [input-schema28887]), :protocol-inline nil, :meta {:schema (schema.core/make-fn-schema output-schema28886 [input-schema28887]), :file "/home/mbp/cljsketch/resources/public/js/compiled/out/om_bootstrap/grid.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(G__28890 rest28891)], :arglists ([G__28890 & rest28891]), :arglists-meta (nil)}, :column 9, :raw-arglists (quote ([opts :- Col & children])), :line 44, :end-line 44, :arglists (quote ([opts & children])), :doc "Inputs: [opts :- Col & children]\n  Returns: t/Component\n\n  Generates a Bootstrap column element."}, :name om-bootstrap.grid/col, :variadic true, :file "resources/public/js/compiled/out/om_bootstrap/grid.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(G__28890 rest28891)], :arglists ([G__28890 & rest28891]), :arglists-meta (nil)}, :method-params [(G__28890 rest28891)], :protocol-impl nil, :arglists-meta (nil), :column 1, :raw-arglists (quote ([opts :- Col & children])), :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists ([G__28890 & rest28891]), :doc "Inputs: [opts :- Col & children]\n  Returns: t/Component\n\n  Generates a Bootstrap column element."}}, :require-macros {d om-tools.dom, om-tools.dom om-tools.dom, s schema.core, schema.core schema.core}, :cljs.analyzer/constants {:seen #{:schema :md-pull :schema.core/error :lg :lg-push :sm :value :lg-pull :type :xs-push :xs :sm-offset :sm-pull :lg-offset :class :error :md-push :sm-push :md-offset :xs-pull :fluid? :md :xs-offset}, :order [:fluid? :md-pull :lg :lg-push :sm :lg-pull :xs-push :xs :sm-offset :sm-pull :lg-offset :md-push :sm-push :md-offset :xs-pull :md :xs-offset :type :schema :value :error :schema.core/error :class]}, :doc "Grid, Row, Col."}